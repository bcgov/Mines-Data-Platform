name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: write  # Required if Terraform needs to update state files or perform actions

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: test

    defaults:
      run:
        shell: bash

    steps:

    # - name: debug vars
    #   run: echo ${{ vars.TF_VAR_LOCATION }}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: false

    - name: Set Azure Service Principal Environment Variables
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.SERVICE_PRINCIPAL_ID }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ vars.TF_VAR_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ vars.TF_VAR_TENANT_ID }}" >> $GITHUB_ENV

    - name: Shell Script - Create Backend
      run: |
        pwd
        chmod +x scripts/createbackend.sh
        ./scripts/createbackend.sh
      working-directory: ./scripts

        
    - name: Terraform Init
      run: terraform init -backend-config="environments/test/backend.conf"
      working-directory: ./terraform

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan \
          -input=false \
          -var="ADDRESS_SPACE=${{ secrets.ADDRESS_SPACE }}" \
          -var="SERVICE_PRINCIPAL_ID=${{ secrets.SERVICE_PRINCIPAL_ID }}"
      working-directory: ./terraform

    # # Uncomment and adjust conditions for apply if needed
    # - name: Terraform Apply
    #   if: success() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve -input=false
    #   working-directory: ./terraform
